/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project.addmoto.view;

/**
 *
 * @author Kim Howel delos Reyes
 */
public class InventoryInfo extends javax.swing.JPanel {

    /**
     * Creates new form InventoryInfo
     */
    public InventoryInfo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        jScrollPane1.setBorder(null);

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(240, 240, 240));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(1);
        jTextArea1.setTabSize(4);
        jTextArea1.setText("Good -> quantity-on-hand (QOH) is beyond threshold count (TC) times 1.1.\nExample:\n\tQOH: 117\n\tTC: 100\n\tTC * 1.1: 110\n\tStatus: Good\n\nMessage is shown in Green color.\n\n----------------------------------------------------\n\nWarning -> quantity-on-hand (QOH) is inclusively between threshold count (TC) times 1.1 and threshold count (TC) time 0.9\nExample:\n\tQOH: 105\n\tTC: 100\n\tTC * 1.1: 110\n\tStatus: Warning\n\tTC * 0.9: 90\n\tStatus: Warning\n\nMessage is shown in Orange color.\n\n----------------------------------------------------\n\nCritical -> quantity-on-hand (QOH) is below threshold count (TC) time 0.9.\nExample:\n\tQOH: 88\n\tTC: 100\n\tTC * 0.9: 90\n\tStatus: Critical\n\nMessage is shown in Green color.");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setBorder(null);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
